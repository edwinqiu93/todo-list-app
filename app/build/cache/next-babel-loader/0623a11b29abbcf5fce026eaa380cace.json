{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar agent = require(\"./agent\");\n\nfunction createTask(_x) {\n  return _createTask.apply(this, arguments);\n}\n\nfunction _createTask() {\n  _createTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(payload) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", agent.get().post(\"/api/tasks\", {\n              payload: payload\n            }).then(function (resp) {\n              return resp.data;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _createTask.apply(this, arguments);\n}\n\nfunction getAllTasks() {\n  return _getAllTasks.apply(this, arguments);\n}\n\nfunction _getAllTasks() {\n  _getAllTasks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", agent.get().get(\"/api/tasks\").then(function (resp) {\n              return resp.data;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getAllTasks.apply(this, arguments);\n}\n\nfunction deleteTask(_x2) {\n  return _deleteTask.apply(this, arguments);\n}\n\nfunction _deleteTask() {\n  _deleteTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", agent.get()[\"delete\"](\"/api/tasks/\".concat(id)).then(function (resp) {\n              return resp;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _deleteTask.apply(this, arguments);\n}\n\nfunction updateTask(_x3) {\n  return _updateTask.apply(this, arguments);\n}\n\nfunction _updateTask() {\n  _updateTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", agent.get().patch(\"/api/tasks/\".concat(id)).then(function (resp) {\n              return resp.data;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _updateTask.apply(this, arguments);\n}\n\nmodule.exports = {\n  createTask: createTask,\n  getAllTasks: getAllTasks,\n  deleteTask: deleteTask,\n  updateTask: updateTask\n};","map":null,"metadata":{},"sourceType":"script"}