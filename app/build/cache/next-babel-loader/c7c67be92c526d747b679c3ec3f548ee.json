{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec, _class;\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"components/Button\";\nimport { action } from \"modules\";\nimport classnames from \"utils/classnames\";\nvar Modal = (_dec = connect(null, function (dispatch) {\n  return {\n    close: function close() {\n      return dispatch(action.modal.close());\n    }\n  };\n}), _dec(_class = /*#__PURE__*/function (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  var _super = _createSuper(Modal);\n\n  function Modal() {\n    _classCallCheck(this, Modal);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Modal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          header = _this$props.header,\n          icon = _this$props.icon,\n          buttons = _this$props.buttons,\n          loading = _this$props.loading,\n          children = _this$props.children,\n          indentedBody = _this$props.indentedBody,\n          headerBold = _this$props.headerBold;\n      return __jsx(\"div\", {\n        className: classnames(\"modal-dialog\", \"modal-\" + size)\n      }, __jsx(\"div\", {\n        className: \"modal-content\"\n      }, __jsx(\"header\", {\n        className: \"modal-header\"\n      }, __jsx(\"div\", {\n        className: \"modal-title\"\n      }, icon && __jsx(\"i\", {\n        className: classnames(\"modal-icon\", icon)\n      }), __jsx(\"span\", null, headerBold ? __jsx(\"strong\", null, header) : {\n        header: header\n      })), __jsx(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        onClick: this.props.close\n      }, __jsx(\"span\", {\n        \"aria-hidden\": \"true\"\n      }, __jsx(\"i\", {\n        className: \"icon-cross3\"\n      })))), __jsx(\"div\", {\n        className: classnames(\"modal-body\", loading && \"text-center\", indentedBody && \"modal-indented\")\n      }, loading && __jsx(\"img\", {\n        src: \"/loading.svg\"\n      }), !loading && children), buttons.length > 0 && __jsx(\"footer\", {\n        className: \"modal-footer buttons\"\n      }, buttons.map(function (button, index) {\n        return __jsx(Button, _extends({\n          key: index,\n          disabled: loading\n        }, button));\n      }))));\n    }\n  }]);\n\n  return Modal;\n}(React.Component)) || _class);\nModal.defaultProps = {\n  buttons: [],\n  loading: false\n};\nexport default Modal;","map":null,"metadata":{},"sourceType":"module"}