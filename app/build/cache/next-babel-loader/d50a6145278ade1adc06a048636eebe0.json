{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport classnames from \"utils/classnames\";\nimport isComponentType from \"utils/isComponentType\";\nimport noop from \"lodash/noop\";\n\nvar Button = /*#__PURE__*/function (_React$Component) {\n  _inherits(Button, _React$Component);\n\n  var _super = _createSuper(Button);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          type = _this$props.type,\n          disabled = _this$props.disabled,\n          onClick = _this$props.onClick,\n          title = _this$props.title,\n          children = _this$props.children,\n          icon = _this$props.icon,\n          className = _this$props.className,\n          size = _this$props.size,\n          width = _this$props.width,\n          fontSize = _this$props.fontSize;\n      var buttonClass = classnames(\"btn\", \"btn-\".concat(size), \"btn-\".concat(isComponentType(type) ? type : \"default\"), className);\n      return __jsx(\"button\", {\n        className: buttonClass,\n        disabled: disabled,\n        onClick: disabled ? noop : onClick,\n        style: {\n          width: \"\".concat(width),\n          fontSize: \"\".concat(fontSize)\n        }\n      }, icon && !children && __jsx(\"i\", {\n        className: icon\n      }), __jsx(\"span\", null, title || children));\n    }\n  }]);\n\n  return Button;\n}(React.Component);\n\nButton.defaultProps = {\n  type: \"default\",\n  size: \"md\",\n  disabled: false\n};\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}