{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport classnames from \"utils/classnames\";\nimport isComponentType from \"utils/isComponentType\";\nimport { Spring, animated, config } from \"react-spring/renderprops.cjs\";\nimport css from \"./Panel.module.scss\"; // panel-[primary, success, info, warning, danger]\n// panel-group (remove )\n\nvar Panel = /*#__PURE__*/function (_React$Component) {\n  _inherits(Panel, _React$Component);\n\n  var _super = _createSuper(Panel);\n\n  function Panel(props) {\n    var _this;\n\n    _classCallCheck(this, Panel);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      show: true,\n      collapsed: false\n    };\n    return _this;\n  }\n\n  _createClass(Panel, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          show = _this$state.show,\n          collapsed = _this$state.collapsed;\n      if (!show) return __jsx(React.Fragment, null);\n      var _this$props = this.props,\n          type = _this$props.type,\n          icon = _this$props.icon,\n          title = _this$props.title,\n          subtitle = _this$props.subtitle,\n          inlineSubtitle = _this$props.inlineSubtitle,\n          loading = _this$props.loading,\n          className = _this$props.className,\n          control = _this$props.control,\n          onRefresh = _this$props.onRefresh,\n          border = _this$props.border,\n          borderPos = _this$props.borderPos,\n          padding = _this$props.padding,\n          footer = _this$props.footer,\n          headerClassName = _this$props.headerClassName,\n          bodyClassName = _this$props.bodyClassName,\n          footerClassName = _this$props.footerClassName;\n      var panelClass = classnames(\"panel\", // control && collapsed && \"panel-collapsed\",\n      isComponentType(type) && \"panel-\".concat(type), isComponentType(border) && \"border-\".concat(borderPos, \"-\").concat(border), className);\n      var subtitleClass = classnames(\"meta\", inlineSubtitle ? css[\"inline-meta\"] : \"display-block\");\n      var bodyClass = classnames(\"panel-body\", !padding && \"no-padding\", bodyClassName);\n      var headerClass = classnames(\"panel-heading\", headerClassName);\n      var footerClass = classnames(\"panel-footer\", footerClassName); // console.log(\"props\", this.props.headerClassName);\n\n      return __jsx(\"div\", {\n        className: panelClass\n      }, __jsx(\"header\", {\n        className: headerClass\n      }, icon && __jsx(\"i\", {\n        className: classnames(\"icon\", icon)\n      }), title, subtitle && __jsx(\"span\", {\n        className: subtitleClass\n      }, \" \", subtitle, \" \"), control && __jsx(\"ul\", {\n        className: css.control\n      }, __jsx(\"li\", null, __jsx(\"i\", {\n        className: \"icon-arrow-\".concat(collapsed ? \"up\" : \"down\", \"12\"),\n        onClick: function onClick() {\n          return _this2.setState({\n            collapsed: !collapsed\n          });\n        }\n      })), onRefresh && __jsx(\"li\", null, __jsx(\"i\", {\n        className: \"icon-sync\",\n        onClick: onRefresh\n      })), __jsx(\"li\", null, __jsx(\"i\", {\n        className: \"icon-cross3\",\n        onClick: function onClick() {\n          return _this2.setState({\n            show: !show\n          });\n        }\n      })))), loading && __jsx(\"div\", {\n        className: \"panel-body panel-body-loading\"\n      }, __jsx(\"img\", {\n        src: \"/loading.svg\"\n      })), !loading && __jsx(React.Fragment, null, __jsx(Spring, {\n        from: {\n          display: \"block\",\n          opacity: 1\n        },\n        to: {\n          display: collapsed ? \"none\" : \"block\",\n          opacity: collapsed ? 0 : 1\n        },\n        config: _objectSpread(_objectSpread({}, config[\"default\"]), {}, {\n          duration: 250\n        })\n      }, function (style) {\n        return __jsx(animated.div, {\n          style: style,\n          className: bodyClass\n        }, _this2.props.children);\n      }), !collapsed && footer && __jsx(\"div\", {\n        className: footerClass\n      }, footer)));\n    }\n  }]);\n\n  return Panel;\n}(React.Component);\n\nPanel.defaultProps = {\n  borderPos: \"top\",\n  padding: true,\n  loading: false\n};\nexport default Panel;","map":null,"metadata":{},"sourceType":"module"}