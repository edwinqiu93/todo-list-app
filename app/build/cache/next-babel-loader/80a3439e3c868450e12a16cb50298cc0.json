{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport classnames from \"utils/classnames\";\nimport isComponentType from \"utils/isComponentType\";\nimport { Spring, animated, config } from \"react-spring/renderprops.cjs\";\nimport css from \"./Panel.module.scss\"; // panel-[primary, success, info, warning, danger]\n// panel-group (remove )\n\nclass Panel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true,\n      collapsed: false\n    };\n  }\n\n  render() {\n    const {\n      show,\n      collapsed\n    } = this.state;\n    if (!show) return __jsx(React.Fragment, null);\n    const {\n      type,\n      icon,\n      title,\n      subtitle,\n      inlineSubtitle,\n      loading,\n      className,\n      control,\n      onRefresh,\n      border,\n      borderPos,\n      padding,\n      footer,\n      headerClassName,\n      bodyClassName,\n      footerClassName\n    } = this.props;\n    const panelClass = classnames(\"panel\", // control && collapsed && \"panel-collapsed\",\n    isComponentType(type) && `panel-${type}`, isComponentType(border) && `border-${borderPos}-${border}`, className);\n    const subtitleClass = classnames(\"meta\", inlineSubtitle ? css[\"inline-meta\"] : \"display-block\");\n    const bodyClass = classnames(\"panel-body\", !padding && \"no-padding\", bodyClassName);\n    const headerClass = classnames(\"panel-heading\", headerClassName);\n    const footerClass = classnames(\"panel-footer\", footerClassName); // console.log(\"props\", this.props.headerClassName);\n\n    return __jsx(\"div\", {\n      className: panelClass\n    }, __jsx(\"header\", {\n      className: headerClass\n    }, icon && __jsx(\"i\", {\n      className: classnames(\"icon\", icon)\n    }), title, subtitle && __jsx(\"span\", {\n      className: subtitleClass\n    }, \" \", subtitle, \" \"), control && __jsx(\"ul\", {\n      className: css.control\n    }, __jsx(\"li\", null, __jsx(\"i\", {\n      className: `icon-arrow-${collapsed ? \"up\" : \"down\"}12`,\n      onClick: () => this.setState({\n        collapsed: !collapsed\n      })\n    })), onRefresh && __jsx(\"li\", null, __jsx(\"i\", {\n      className: \"icon-sync\",\n      onClick: onRefresh\n    })), __jsx(\"li\", null, __jsx(\"i\", {\n      className: \"icon-cross3\",\n      onClick: () => this.setState({\n        show: !show\n      })\n    })))), loading && __jsx(\"div\", {\n      className: \"panel-body panel-body-loading\"\n    }, __jsx(\"img\", {\n      src: \"/loading.svg\"\n    })), !loading && __jsx(React.Fragment, null, __jsx(Spring, {\n      from: {\n        display: \"block\",\n        opacity: 1\n      },\n      to: {\n        display: collapsed ? \"none\" : \"block\",\n        opacity: collapsed ? 0 : 1\n      },\n      config: _objectSpread(_objectSpread({}, config.default), {}, {\n        duration: 250\n      })\n    }, style => __jsx(animated.div, {\n      style: style,\n      className: bodyClass\n    }, this.props.children)), !collapsed && footer && __jsx(\"div\", {\n      className: footerClass\n    }, footer)));\n  }\n\n}\n\nPanel.defaultProps = {\n  borderPos: \"top\",\n  padding: true,\n  loading: false\n};\nexport default Panel;","map":null,"metadata":{},"sourceType":"module"}