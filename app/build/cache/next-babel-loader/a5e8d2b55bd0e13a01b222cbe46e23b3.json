{"ast":null,"code":"// import config from '../config'\nimport jwtDecode from 'jwt-decode';\n\nlet _timeoutId;\n\nconst _TEN_SECONDS_IN_MS = 10000;\nconst TokenService = {\n  saveAuthToken(token) {\n    window.sessionStorage.setItem(process.env.TOKEN_KEY, token);\n  },\n\n  getAuthToken() {\n    return window.sessionStorage.getItem(process.env.TOKEN_KEY);\n  },\n\n  clearAuthToken() {\n    window.sessionStorage.removeItem(process.env.TOKEN_KEY);\n  },\n\n  hasAuthToken() {\n    return !!TokenService.getAuthToken();\n  },\n\n  parseJwt(jwt) {\n    return jwtDecode(jwt);\n  },\n\n  readJwtToken() {\n    return TokenService.parseJwt(TokenService.getAuthToken());\n  },\n\n  //payload.exp is time expressed in seconds since epoch \n  _getMsUntilExpiry(payload) {\n    return payload.exp * 1000 - Date.now();\n  },\n\n  queueCallbackBeforeExpiry(callback) {\n    const msUntilExpiry = TokenService._getMsUntilExpiry(TokenService.readJwtToken());\n\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS);\n  },\n\n  clearCallbackBeforeExpiry() {\n    clearTimeout(_timeoutId);\n  }\n\n};\nexport default TokenService;","map":null,"metadata":{},"sourceType":"module"}