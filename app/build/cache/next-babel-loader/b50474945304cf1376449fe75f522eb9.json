{"ast":null,"code":"// import config from '../config'\nimport jwtDecode from 'jwt-decode';\n\nvar _timeoutId;\n\nvar _TEN_SECONDS_IN_MS = 10000;\nvar TokenService = {\n  saveAuthToken: function saveAuthToken(token) {\n    window.sessionStorage.setItem(process.env.TOKEN_KEY, token);\n  },\n  getAuthToken: function getAuthToken() {\n    return window.sessionStorage.getItem(process.env.TOKEN_KEY);\n  },\n  clearAuthToken: function clearAuthToken() {\n    window.sessionStorage.removeItem(process.env.TOKEN_KEY);\n  },\n  hasAuthToken: function hasAuthToken() {\n    return !!TokenService.getAuthToken();\n  },\n  parseJwt: function parseJwt(jwt) {\n    return jwtDecode(jwt);\n  },\n  readJwtToken: function readJwtToken() {\n    return TokenService.parseJwt(TokenService.getAuthToken());\n  },\n  //payload.exp is time expressed in seconds since epoch \n  _getMsUntilExpiry: function _getMsUntilExpiry(payload) {\n    return payload.exp * 1000 - Date.now();\n  },\n  queueCallbackBeforeExpiry: function queueCallbackBeforeExpiry(callback) {\n    var msUntilExpiry = TokenService._getMsUntilExpiry(TokenService.readJwtToken());\n\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS);\n  },\n  clearCallbackBeforeExpiry: function clearCallbackBeforeExpiry() {\n    clearTimeout(_timeoutId);\n  }\n};\nexport default TokenService;","map":null,"metadata":{},"sourceType":"module"}