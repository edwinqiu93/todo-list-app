{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec, _class;\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { connect } from \"react-redux\";\nimport { action } from \"modules\";\nReactModal.setAppElement(\"body\");\nvar Modal = (_dec = connect( // mapStateToProps\nfunction (state) {\n  return {\n    show: state.modal.show,\n    tag: state.modal.tag,\n    payload: state.modal.payload\n  };\n}, // mapDispatchToProps\nfunction (dispatch) {\n  return {\n    close: function close() {\n      return dispatch(action.modal.close());\n    }\n  };\n}), _dec(_class = /*#__PURE__*/function (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  var _super = _createSuper(Modal);\n\n  function Modal(props) {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      modals: {}\n    };\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var modals;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return import(\"../../modal\");\n\n              case 2:\n                modals = _context.sent;\n                this.setState({\n                  modals: modals\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var modals = this.state.modals;\n      var _this$props = this.props,\n          show = _this$props.show,\n          tag = _this$props.tag,\n          payload = _this$props.payload,\n          close = _this$props.close;\n      var _Modal = modals[tag];\n      if (!_Modal) return __jsx(React.Fragment, null);\n      return __jsx(ReactModal, {\n        isOpen: show,\n        className: \"modal-container\",\n        overlayClassName: \"modal-backdrop\",\n        closeTimeoutMS: 200\n      }, __jsx(_Modal, _extends({}, payload, {\n        close: close\n      })));\n    }\n  }]);\n\n  return Modal;\n}(React.Component)) || _class);\nexport default Modal;","map":null,"metadata":{},"sourceType":"module"}