{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _dec, _class;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport objectPath from \"object-path\";\nimport { connect } from \"react-redux\";\nimport * as api from \"api\";\nimport Button from \"components/Button\";\nimport Router from \"next/router\";\nimport { action } from \"modules\";\nimport css from \"./register.module.scss\";\nimport Link from \"next/link\";\nimport classnames from \"classnames\";\nimport IdleService from \"../../services/idle-service\";\nimport TokenService from \"../../services/token-service\";\nvar Register = (_dec = connect(), _dec(_class = /*#__PURE__*/function (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  var _super = _createSuper(Register);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      payload: {\n        password: \"\",\n        user_id: \"\",\n        confirmPassword: \"\"\n      },\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (path) {\n      return function (value) {\n        var state = _objectSpread({}, _this.state);\n\n        objectPath.set(state, path, value);\n\n        _this.setState(state);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n        var _this$state$payload, user_id, password, confirmPassword, newUser, respJson, _error$response$data, _error$response;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                event.preventDefault();\n                _this$state$payload = _this.state.payload, user_id = _this$state$payload.user_id, password = _this$state$payload.password, confirmPassword = _this$state$payload.confirmPassword;\n\n                if (!(user_id.trim() === \"\" || password.trim() === \"\")) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", window.alert(\"User ID and Password can't be empty\"));\n\n              case 4:\n                if (!(password !== confirmPassword)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", window.alert(\"Passwords don't match. Please try again.\"));\n\n              case 6:\n                newUser = {\n                  user_id: user_id,\n                  password: password\n                };\n                _context2.prev = 7;\n\n                _this.setState({\n                  loading: true\n                });\n\n                _context2.next = 11;\n                return api.user.registerAccount(newUser);\n\n              case 11:\n                respJson = _context2.sent;\n\n                if (!respJson) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                TokenService.saveAuthToken(respJson.authToken);\n                IdleService.registerIdleTimerResets();\n                TokenService.queueCallbackBeforeExpiry( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return api.user.postRefreshToken();\n\n                        case 2:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })));\n\n                _this.setState({\n                  loading: false\n                });\n\n                return _context2.abrupt(\"return\", Router.push(\"/dashboard\"));\n\n              case 18:\n                _context2.next = 25;\n                break;\n\n              case 20:\n                _context2.prev = 20;\n                _context2.t0 = _context2[\"catch\"](7);\n                console.error(_context2.t0);\n                window.alert((_error$response$data = (_error$response = _context2.t0.response) === null || _error$response === void 0 ? void 0 : _error$response.data) !== null && _error$response$data !== void 0 ? _error$response$data : _context2.t0.message);\n                return _context2.abrupt(\"return\", _this.setState({\n                  loading: false\n                }));\n\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[7, 20]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          payload = _this$state.payload;\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: classnames(css.bg)\n      }), __jsx(\"div\", {\n        className: classnames(css.overlay)\n      }), __jsx(\"div\", {\n        className: classnames(css.container)\n      }, __jsx(\"div\", {\n        className: classnames(css[\"left-portal\"])\n      }, __jsx(\"section\", {\n        className: \"CreateAccount\"\n      }, __jsx(\"h2\", null, \"Create an Account\"), __jsx(\"form\", {\n        className: \"login-form\",\n        onSubmit: this.handleSubmit\n      }, __jsx(\"div\", {\n        className: \"signup-element\"\n      }, __jsx(\"div\", {\n        className: \"signup-label\"\n      }, __jsx(\"label\", {\n        htmlFor: \"user_id\"\n      }, \"User ID\"), __jsx(\"span\", {\n        className: \"astrik\"\n      }, \"*\"), __jsx(\"div\", {\n        className: \"signup-input\"\n      }, __jsx(\"input\", {\n        id: \"user_id\",\n        name: \"user_id\",\n        value: payload.user_id,\n        onChange: function onChange(event) {\n          return _this2.handleChange(\"payload.user_id\")(event.target.value);\n        }\n      })))), __jsx(\"div\", {\n        className: \"signup-element\"\n      }, __jsx(\"div\", {\n        className: \"signup-label\"\n      }, __jsx(\"label\", {\n        htmlFor: \"password\"\n      }, \"Password\"), __jsx(\"span\", {\n        className: \"astrik\"\n      }, \"*\"), __jsx(\"div\", {\n        className: \"signup-input\"\n      }, __jsx(\"input\", {\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        value: payload.password,\n        onChange: function onChange(event) {\n          return _this2.handleChange(\"payload.password\")(event.target.value);\n        }\n      })))), __jsx(\"div\", {\n        className: \"signup-element\"\n      }, __jsx(\"div\", {\n        className: \"signup-label\"\n      }, __jsx(\"label\", {\n        htmlFor: \"confirmPassword\"\n      }, \"Confirm Password\"), __jsx(\"span\", {\n        className: \"astrik\"\n      }, \"*\"), __jsx(\"div\", {\n        className: \"signup-input\"\n      }, __jsx(\"input\", {\n        id: \"confirmPassword\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        value: payload.confirmPassword,\n        onChange: function onChange(event) {\n          return _this2.handleChange(\"payload.confirmPassword\")(event.target.value);\n        }\n      })))), __jsx(\"div\", {\n        className: \"signin-button\"\n      }, __jsx(\"button\", {\n        className: \"btn btn-login\",\n        type: \"submit\",\n        disabled: loading\n      }, \"Create Account\")), __jsx(\"div\", {\n        className: \"login-demo\"\n      }, __jsx(\"p\", null, \"Password must be longer than 8 characters and contain one upper case, lower case, and number.\")), __jsx(\"div\", {\n        className: \"login-form-redirect\"\n      }, __jsx(Link, {\n        href: \"/\"\n      }, __jsx(\"a\", null, \"Already Have an Account?\"))))))));\n    }\n  }]);\n\n  return Register;\n}(React.Component)) || _class);\nexport default Register;","map":null,"metadata":{},"sourceType":"module"}