{"ast":null,"code":"var _dec, _class;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from \"next/head\";\nimport moment from \"moment\";\nimport { DefaultSeo } from \"next-seo\";\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\nimport NextApp from \"next/app\";\nimport Main from \"components/Main\";\nimport Router from \"next/router\";\nimport store from \"../store\";\nimport webConfig from \"../web.config\";\nimport \"../styles/index.scss\";\nimport 'react-day-picker/lib/style.css';\nimport IdleService from \"../services/idle-service\";\nimport TokenService from \"../services/token-service\";\nimport * as api from \"api\";\n\nmoment.prototype.standard = function () {\n  return this.format(\"Do MMMM, YYYY hh:mm a\");\n};\n\nmoment.prototype.shortStandard = function () {\n  return this.format(\"Do MMM, hh:mm a\");\n};\n\nRouter.events.on(\"routeChangeComplete\", url => {\n  if (window && window._paq) {\n    window._paq.push([\"setCustomUrl\", url]);\n\n    window._paq.push([\"setDocumentTitle\", document.title]);\n\n    window._paq.push([\"trackPageView\"]);\n  } // $(\"#main\").animate({ scrollTop: 0 }, 200);\n\n});\nlet App = (_dec = withRedux(store), _dec(_class = class App extends NextApp {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"logoutFromIdle\", () => {\n      TokenService.clearAuthToken();\n      TokenService.clearCallbackBeforeExpiry();\n      IdleService.unRegisterIdleResets();\n      return Router.push(\"/\");\n    });\n  }\n\n  componentDidMount() {\n    IdleService.setIdleCallback(this.logoutFromIdle);\n\n    if (TokenService.hasAuthToken()) {\n      IdleService.registerIdleTimerResets();\n      TokenService.queueCallbackBeforeExpiry(async () => {\n        await api.user.postRefreshToken;\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    IdleService.unRegisterIdleResets();\n    TokenService.clearCallbackBeforeExpiry();\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"\n    })), __jsx(DefaultSeo, {\n      title: \"Home\",\n      titleTemplate: \"%s | \" + webConfig.title,\n      description: webConfig.description,\n      canonical: webConfig.canonical,\n      additionalMetaTags: [{\n        name: \"keywords\",\n        content: webConfig.keywords\n      }]\n    }), __jsx(Provider, {\n      store: store\n    }, __jsx(Main, pageProps, __jsx(Component, pageProps))));\n  }\n\n}) || _class);\nexport default App;","map":null,"metadata":{},"sourceType":"module"}