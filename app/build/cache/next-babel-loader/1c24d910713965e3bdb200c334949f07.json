{"ast":null,"code":"var _dec, _class;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport objectPath from \"object-path\";\nimport { connect } from \"react-redux\";\nimport * as api from \"api\";\nimport Button from \"components/Button\";\nimport Router from \"next/router\";\nimport css from \"./login.module.scss\";\nimport Link from \"next/link\";\nimport classnames from \"classnames\";\nimport IdleService from \"../../services/idle-service\";\nimport TokenService from \"../../services/token-service\";\nlet Login = (_dec = connect(), _dec(_class = class Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      payload: {\n        password: \"\",\n        user_id: \"\"\n      },\n      loading: false\n    });\n\n    _defineProperty(this, \"handleChange\", path => value => {\n      const state = _objectSpread({}, this.state);\n\n      objectPath.set(state, path, value);\n      this.setState(state);\n    });\n\n    _defineProperty(this, \"handleSubmit\", async event => {\n      event.preventDefault();\n      const {\n        user_id,\n        password\n      } = this.state.payload;\n\n      if (user_id.trim() === \"\" || password.trim() === \"\") {\n        return window.alert(\"User ID and Password can't be empty\");\n      }\n\n      let loginUser = {\n        user_id,\n        password\n      };\n\n      try {\n        this.setState({\n          loading: true\n        });\n        let respJson = await api.user.login(loginUser);\n\n        if (respJson) {\n          TokenService.saveAuthToken(respJson.authToken);\n          IdleService.registerIdleTimerResets();\n          TokenService.queueCallbackBeforeExpiry(async () => {\n            await api.user.postRefreshToken();\n          });\n          this.setState({\n            loading: false\n          });\n          return Router.push(\"/dashboard\");\n        }\n      } catch (error) {\n        var _error$response$data, _error$response;\n\n        console.error(error);\n        window.alert((_error$response$data = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) !== null && _error$response$data !== void 0 ? _error$response$data : error.message);\n        return this.setState({\n          loading: false\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      payload,\n      loading\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: classnames(css.bg)\n    }), __jsx(\"div\", {\n      className: classnames(css.overlay)\n    }), __jsx(\"div\", {\n      className: classnames(css.container)\n    }, __jsx(\"div\", {\n      className: classnames(css[\"left-portal\"])\n    }, __jsx(\"h2\", null, \"Login\"), __jsx(\"form\", {\n      className: \"login-form\",\n      onSubmit: this.handleSubmit\n    }, __jsx(\"div\", {\n      className: \"signup-element\"\n    }, __jsx(\"div\", {\n      className: \"signup-label\"\n    }, __jsx(\"label\", {\n      htmlFor: \"user_id\"\n    }, \"User ID\"), __jsx(\"div\", {\n      className: \"signup-input\"\n    }, __jsx(\"input\", {\n      id: \"user_id\",\n      name: \"user_id\",\n      value: payload.user_id,\n      onChange: event => this.handleChange(\"payload.user_id\")(event.target.value),\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"signup-element\"\n    }, __jsx(\"div\", {\n      className: \"signup-label\"\n    }, __jsx(\"label\", {\n      htmlFor: \"password\"\n    }, \"Password\"), __jsx(\"div\", {\n      className: \"signup-input\"\n    }, __jsx(\"input\", {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      value: payload.password,\n      onChange: event => this.handleChange(\"payload.password\")(event.target.value),\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"signin-button\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-login\",\n      type: \"submit\"\n    }, \"Sign In\")), __jsx(\"div\", {\n      className: \"login-demo\"\n    }, __jsx(\"h4\", null, \"Demo Account\"), __jsx(\"p\", null, \"User ID: demo\"), __jsx(\"p\", null, \"Password: Testing123\")), __jsx(\"div\", {\n      className: \"login-form-redirect\"\n    }, __jsx(Link, {\n      href: \"/register\"\n    }, __jsx(\"a\", null, \"Don\\\"t have an account? Create one.\")))))));\n  }\n\n}) || _class);\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}